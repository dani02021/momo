"use strict";
/* tslint:disable:no-magic-numbers */
Object.defineProperty(exports, "__esModule", { value: true });
exports.float = function (min, max, fixed, str) {
    min = min || 0;
    if (!max && min > 1) {
        max = Math.ceil(min);
    }
    max = max || max === 0 ? max : 1;
    if (typeof min !== 'number') {
        throw Error('Min should be a number');
    }
    if (typeof max !== 'number') {
        throw Error('Max should be a number');
    }
    if (min > max) {
        throw Error('Max should be greater then min');
    }
    var result = Math.random() * (max - min) + min;
    if (fixed || fixed === 0) {
        result = toFixed(result, fixed);
        if (!str) {
            result = parseFloat(result);
        }
    }
    return result;
};
function toFixed(value, precision) {
    precision = precision || 0;
    var power = Math.pow(10, precision);
    var absValue = Math.abs(Math.round(value * power));
    var result = (value < 0 ? '-' : '') + String(Math.floor(absValue / power));
    if (precision > 0) {
        var fraction = String(absValue % power);
        var padding = new Array(Math.max(precision - fraction.length, 0) + 1).join('0');
        result += "." + padding + fraction;
    }
    return result;
}
//# sourceMappingURL=float.js.map